{"ast":null,"code":"var _jsxFileName = \"/home/emma/githubFinder/src/context/github/GithubContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GithubContext = /*#__PURE__*/createContext();\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\nexport const GithubProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchUsers = async () => {\n    const response = await fetch(`${GITHUB_URL}/users`, {\n      headers: {\n        Authorization: `token ${GITHUB_TOKEN}`\n      }\n    });\n    const data = await response.json();\n    setUsers(data);\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: {\n      users,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n};\n\n_s(GithubProvider, \"7VV5U2Js0/PjsYq3k2PJZfNfyyo=\");\n\n_c = GithubProvider;\nexport default GithubContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProvider\");","map":{"version":3,"names":["createContext","useState","GithubContext","GITHUB_URL","process","env","REACT_APP_GITHUB_URL","GITHUB_TOKEN","REACT_APP_GITHUB_TOKEN","GithubProvider","children","users","setUsers","loading","setLoading","fetchUsers","response","fetch","headers","Authorization","data","json"],"sources":["/home/emma/githubFinder/src/context/github/GithubContext.js"],"sourcesContent":["import { createContext, useState} from 'react'\n\nconst GithubContext = createContext()\n\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN\n\nexport const GithubProvider = ({children}) => {\n\n    const [users, setUsers] = useState([])\n    const [loading, setLoading] = useState(true)\n    const fetchUsers = async () => {\n        const response = await fetch(`${GITHUB_URL}/users`, {\n            headers: {\n                Authorization: `token ${GITHUB_TOKEN}`\n            }\n        })\n        const data = await response.json()\n        setUsers(data)\n        setLoading(false)\n    }\n    return <GithubContext.Provider value={{\n        users,\n        loading\n    }}>\n        {children}\n    </GithubContext.Provider>\n}\n\nexport default GithubContext"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAuC,OAAvC;;AAEA,MAAMC,aAAa,gBAAGF,aAAa,EAAnC;AAEA,MAAMG,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA/B;AACA,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAR,CAAYG,sBAAjC;AAEA,OAAO,MAAMC,cAAc,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EAE1C,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;;EACA,MAAMc,UAAU,GAAG,YAAY;IAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEd,UAAW,QAAf,EAAwB;MAChDe,OAAO,EAAE;QACLC,aAAa,EAAG,SAAQZ,YAAa;MADhC;IADuC,CAAxB,CAA5B;IAKA,MAAMa,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;IACAT,QAAQ,CAACQ,IAAD,CAAR;IACAN,UAAU,CAAC,KAAD,CAAV;EACH,CATD;;EAUA,oBAAO,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAClCH,KADkC;MAElCE;IAFkC,CAA/B;IAAA,UAIFH;EAJE;IAAA;IAAA;IAAA;EAAA,QAAP;AAMH,CApBM;;GAAMD,c;;KAAAA,c;AAsBb,eAAeP,aAAf"},"metadata":{},"sourceType":"module"}