{"ast":null,"code":"const GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nexport const searchUsers = async text => {\n  const params = new URLSearchParams({\n    q: text\n  });\n  const response = await fetch(`${GITHUB_URL}/search/users?${params}`, {});\n  const {\n    items\n  } = await response.json();\n  return items;\n};\nexport const getUser = async login => {\n  const response = await fetch(`${GITHUB_URL}/users/${login}`, {});\n\n  if (response.status === 404) {\n    window.location = '/notfound';\n  } else {\n    const data = await response.json();\n    return data;\n  }\n};\n\nconst getUserRepos = async login => {\n  const params = new URLSearchParams({\n    sort: 'created',\n    per_page: 10\n  });\n  const response = await fetch(`${GITHUB_URL}/users/${login}/repos?params`, {});\n  const data = await response.json();\n  return data;\n};","map":{"version":3,"names":["GITHUB_URL","process","env","REACT_APP_GITHUB_URL","searchUsers","text","params","URLSearchParams","q","response","fetch","items","json","getUser","login","status","window","location","data","getUserRepos","sort","per_page"],"sources":["/home/emma/githubFinder/src/context/github/GithubActions.js"],"sourcesContent":["const GITHUB_URL = process.env.REACT_APP_GITHUB_URL\n\nexport const searchUsers = async (text) => {\n\n    const params = new URLSearchParams({\n        q: text\n    })\n\n    const response = await fetch(`${GITHUB_URL}/search/users?${params}`, {})\n\n    const {items} = await response.json()\n\n    return items\n}\n\nexport const getUser = async (login) => {\n\n    const response = await fetch(`${GITHUB_URL}/users/${login}`, {})\n\n    if (response.status===404) {\n        window.location = '/notfound'\n    } \n    else {\n        const data = await response.json()\n\n        return data\n    }\n}\n\nconst getUserRepos = async (login) => {\n\n    const params = new URLSearchParams({\n        sort: 'created',\n        per_page: 10\n    })\n\n    const response = await fetch(`${GITHUB_URL}/users/${login}/repos?params`, {})\n\n    const data = await response.json()\n\n    return data\n}"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA/B;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAOC,IAAP,IAAgB;EAEvC,MAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAoB;IAC/BC,CAAC,EAAEH;EAD4B,CAApB,CAAf;EAIA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,UAAW,iBAAgBM,MAAO,EAAtC,EAAyC,EAAzC,CAA5B;EAEA,MAAM;IAACK;EAAD,IAAU,MAAMF,QAAQ,CAACG,IAAT,EAAtB;EAEA,OAAOD,KAAP;AACH,CAXM;AAaP,OAAO,MAAME,OAAO,GAAG,MAAOC,KAAP,IAAiB;EAEpC,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,UAAW,UAASc,KAAM,EAA9B,EAAiC,EAAjC,CAA5B;;EAEA,IAAIL,QAAQ,CAACM,MAAT,KAAkB,GAAtB,EAA2B;IACvBC,MAAM,CAACC,QAAP,GAAkB,WAAlB;EACH,CAFD,MAGK;IACD,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACG,IAAT,EAAnB;IAEA,OAAOM,IAAP;EACH;AACJ,CAZM;;AAcP,MAAMC,YAAY,GAAG,MAAOL,KAAP,IAAiB;EAElC,MAAMR,MAAM,GAAG,IAAIC,eAAJ,CAAoB;IAC/Ba,IAAI,EAAE,SADyB;IAE/BC,QAAQ,EAAE;EAFqB,CAApB,CAAf;EAKA,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,UAAW,UAASc,KAAM,eAA9B,EAA8C,EAA9C,CAA5B;EAEA,MAAMI,IAAI,GAAG,MAAMT,QAAQ,CAACG,IAAT,EAAnB;EAEA,OAAOM,IAAP;AACH,CAZD"},"metadata":{},"sourceType":"module"}